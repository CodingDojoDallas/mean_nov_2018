1. Create a database called 'my_first_db'.
    use my_first_db
2. Create students collection.
    db.createCollection('students')
3. Each document you insert into this collection should have the following format: ({name: STRING, home_state: STRING, lucky_number: NUMBER, birthday: {month: NUMBER, day: NUMBER, year: NUMBER}})
4. Create 5 students with the appropriate info.
    db.students.insert({name: "Picard", home_state: "HI", lucky_number: 7, birthday: {month:01, day: 01, year: 2050}})
    db.students.insert({name: "Worf", home_state: "TX", lucky_number: 22, birthday: {month:05, day: 23, year: 2060}})
    db.students.insert({name: "Riker", home_state: "MN", lucky_number: 13, birthday: {month:05, day: 30, year: 2058}})
    db.students.insert({name: "Troy", home_state: "MN", lucky_number: 4, birthday: {month:07, day: 10, year: 2063}})
    db.students.insert({name: "Beverly", home_state: "CA", lucky_number: 999, birthday: {month:09, day: 18, year: 2057}})
5. Get all students.
    db.students.find()
6. Retrieve all students who are from CA or HI.
    db.students.find({$or: [{home_state: 'CA'}, {home_state: 'HI'}]} )

7. Get all students whose lucky number is:
        1. greater than 4
        db.students.find({lucky_number: {$gt: 4}})
        2. less than or equal to 13
        db.students.find({lucky_number: {$lte: 13}})
        3. between 1 and 9 (inclusive)
        db.students.find({lucky_number: {$lte: 9,$gte: 1}})
8. Add a field to each student collection called 'interests' that is an ARRAY.  
It should contain the following entries: 'coding', 'brunch', 'MongoDB'. Do this in ONE operation.
    db.students.update({}, {$set: {interests: ['coding', 'brunch', 'MongoDB']}},{multi: true})
9. Add some unique interests for each particular student into each of their interest arrays.
    db.students.update({name: 'Picard'}, {$push: {interests: 'horseback riding'}})
    db.students.update({name: 'Worf'}, {$push: {interests: 'yelling'}})
    db.students.update({name: 'Riker'}, {$push: {interests: 'womanizing'}})
    db.students.update({name: 'Troy'}, {$push: {interests: 'telepathy'}})
    db.students.update({name: 'Beverly'}, {$push: {interests: 'medicine'}})
10. Add the interest 'taxes' into someone's interest array.
    db.students.update({name: 'Picard'}, {$push: {interests: 'taxes'}})
11. Remove the 'taxes' interest you just added.
    db.students.update({name: 'Picard'}, {$pull: {interests: 'taxes'}})
12. Remove all students who are from California (or Hawaii).
    db.students.remove({$or: [{home_state: 'CA'}, {home_state: 'HI'}]})
13. Remove a student by name. 
    db.students.remove({name: 'Worf'})
14. Remove a student whose lucky number is greater than 3 (JUST ONE)
    db.students.remove({lucky_number: {$gt: 3}},true)
15. Add a field to each student collection called 'number_of_belts' and set it to 0.
    db.students.update({}, {$set:{number_of_belts: 0}},{multi:true})
16. Increment this field by 1 for all students in MN.
    db.students.update({home_state: 'MN'}, {$inc:{number_of_belts: 1}},{multi:true})
17. Rename the 'number_of_belts' field to 'belts_earned'
    db.students.update({}, {$rename:{'number_of_belts': 'belts_earned'}},{multi:true})
18. Remove the 'lucky_number' field.
    db.students.update({}, {$unset: {lucky_number: ""} })
19. Add a 'updated_on' field, and set the value as the current date.
    db.students.update({}, {$currentDate: {updated_on: true}},{multi:true})